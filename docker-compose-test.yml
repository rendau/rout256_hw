version: "3.7"
services:
  #  checkout:
  #    image: checkout
  #    build: ./checkout/
  #    environment:
  #      DB_DSN: "postgres://postgres:postgres@checkout_db:5432/postgres"
  #      GRPC_PORT: "8080"
  #      HTTP_PORT: "8180"
  #      SERVICES_LOMS_URL: "loms:8081"
  #      SERVICES_PRODUCT_SERVICE_URL: "route256.pavl.uk:8082"
  #      SERVICES_PRODUCT_SERVICE_TOKEN: "${PRODUCT_SERVICE_TOKEN}"
  #    ports:
  #      - "8080:8080"
  #      - "8180:8180"
  #    depends_on:
  #      - checkout_db
  #
  #  checkout_db:
  #    image: postgres:15
  #    environment:
  #      POSTGRES_USER: "postgres"
  #      POSTGRES_PASSWORD: "postgres"
  #      POSTGRES_DB: "postgres"
  #    ports:
  #      - "5433:5432"
  #
  #  loms:
  #    image: loms
  #    build: ./loms/
  #    environment:
  #      DB_DSN: "postgres://postgres:postgres@loms_db:5432/postgres"
  #      GRPC_PORT: "8081"
  #      HTTP_PORT: "8181"
  #    ports:
  #      - "8081:8081"
  #      - "8181:8181"
  #    depends_on:
  #      - loms_db
  #      - kafka
  #
  #  loms_db:
  #    image: postgres:15
  #    environment:
  #      POSTGRES_USER: "postgres"
  #      POSTGRES_PASSWORD: "postgres"
  #      POSTGRES_DB: "postgres"
  #    ports:
  #      - "5434:5432"

  # notification:
  #   image: notification
  #   build: ./notification
  #   ports:
  #     - "8082:8082"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      TZ: "Asia/Almaty"
      ZOOKEEPER_TICK_TIME: "2000"
      ZOOKEEPER_CLIENT_PORT: "2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      TZ: "Asia/Almaty"
      KAFKA_ADVERTISED_LISTENERS: internal://kafka:19092, external://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: internal:PLAINTEXT,external:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: internal
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: "WARN"
      KAFKA_TOOLS_LOG4J_LOGLEVEL: "ERROR"
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092" ]
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      - zookeeper

  test:
    image: test
    build: ./test/
    environment:
      SERVICES_CHECKOUT_URL: "checkout:8080"
      SERVICES_LOMS_URL: "loms:8081"
      KAFKA_BROKERS: "kafka:19092"
      KAFKA_GROUP: "tst-group"
      KAFKA_TOPIC: "tst-topic"
    depends_on:
#      - checkout
#      - loms
      kafka:
        condition: service_healthy
